(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    130017,       2876]
NotebookOptionsPosition[    119154,       2712]
NotebookOutlinePosition[    119534,       2729]
CellTagsIndexPosition[    119491,       2726]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Advanced 3D Printing with MeshRegions", "Title",
 CellChangeTimes->{{3.461405268132181*^9, 3.461405274978758*^9}, {
  3.461405374110767*^9, 3.461405382736993*^9}, {3.461405964606715*^9, 
  3.461405964996537*^9}, {3.461412674365797*^9, 3.461412678153265*^9}, {
  3.47448983369319*^9, 3.474489837928254*^9}, {3.630696562351103*^9, 
  3.630696568117642*^9}, {3.631988928117742*^9, 3.6319889301724463`*^9}, {
  3.632152715690145*^9, 3.632152719687695*^9}, {3.6325873465991592`*^9, 
  3.632587350748754*^9}, {3.633195273613469*^9, 3.633195283053203*^9}, {
  3.634662798361207*^9, 3.634662802015071*^9}, {3.634914020212693*^9, 
  3.634914020306204*^9}, {3.729337790979432*^9, 3.729337796066564*^9}, {
  3.729557487049605*^9, 3.7295574891745386`*^9}, {3.730026768856244*^9, 
  3.730026791710487*^9}},ExpressionUUID->"eee3dd45-dee9-44dc-8db6-\
67e7e98bb992"],

Cell[TextData[{
 "Math 213 - Math with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\nChristopher Hanusa"
}], "Subsubtitle",
 CellChangeTimes->{{3.4614053946645927`*^9, 3.4614054230893087`*^9}, {
  3.461405971637244*^9, 3.4614060079862947`*^9}, {3.474489844264483*^9, 
  3.474489895841402*^9}, {3.505485689221858*^9, 3.505485696180904*^9}, {
  3.53815066431697*^9, 3.538150664587603*^9}, {3.630691352563725*^9, 
  3.6306913589949083`*^9}, {3.632152722336176*^9, 3.6321527477452803`*^9}, {
  3.63215587546747*^9, 3.6321558797854424`*^9}, {3.632587355469249*^9, 
  3.632587384845799*^9}, {3.633195265968095*^9, 
  3.633195266341083*^9}},ExpressionUUID->"3341d4df-b403-4f97-9159-\
991107237301"],

Cell[CellGroupData[{

Cell["Overview", "Section",
 CellChangeTimes->{{3.505485680414241*^9, 3.50548573910983*^9}, {
  3.6325873644380608`*^9, 
  3.632587396150113*^9}},ExpressionUUID->"cdb3715e-8a33-4493-bd7d-\
b8fc1f345485"],

Cell["\<\
Today we will work with MeshRegion objects, the native object that \
Mathematica uses when exporting for 3D Printing.  Understanding it will allow \
you to better know what is and is not exportable as a 3D model.  For example, \
when you import an STL file, your object is a MeshRegion Object.\
\>", "Text",
 CellChangeTimes->{{3.505485741709942*^9, 3.505485911210339*^9}, {
  3.5054859461638536`*^9, 3.505486140785309*^9}, {3.569597235122435*^9, 
  3.56959724256273*^9}, {3.631988357249017*^9, 3.631988375104192*^9}, {
  3.631988705128955*^9, 3.63198874613913*^9}, {3.63198884890553*^9, 
  3.631988859824958*^9}, {3.631993478341037*^9, 3.631993482877342*^9}, {
  3.632152755553952*^9, 3.632152780995129*^9}, {3.6321554348424473`*^9, 
  3.6321554505553493`*^9}, {3.632587400518695*^9, 3.632587452903551*^9}, {
  3.633195287509656*^9, 3.6331953613595057`*^9}, {3.634662809071232*^9, 
  3.6346628710010853`*^9}, {3.6348281169343977`*^9, 3.634828145709795*^9}, {
  3.634914023714526*^9, 3.6349140472113237`*^9}, {3.7295536724335947`*^9, 
  3.729553725548106*^9}, {3.729557491775596*^9, 3.7295575097716484`*^9}, {
  3.729804732004755*^9, 3.729804876134579*^9}, {3.7300242158612337`*^9, 
  3.730024249831542*^9}},ExpressionUUID->"8b01631c-299a-46a1-83b1-\
f58254ff18b3"],

Cell[BoxData[
 RowBox[{"?", "MeshRegion"}]], "Input",
 CellChangeTimes->{{3.7299641624910297`*^9, 
  3.729964168089237*^9}},ExpressionUUID->"76c1a888-82eb-4d7a-86cc-\
d8b780c6b930"],

Cell[TextData[{
 "A good list of related commands is given in this ",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{"Mesh", "-", 
     RowBox[{"Based", " ", "Geometric", " ", "Regions", " ", "guide"}]}],
    BaseStyle->"Link",
    ButtonData->"paclet:guide/MeshRegions"], TraditionalForm]],
  ExpressionUUID->"2531c935-b7c6-483a-9c11-6451e2f27619"],
 "."
}], "Text",
 CellChangeTimes->{{3.729964413002446*^9, 3.729964472340193*^9}, {
  3.730024226399023*^9, 
  3.730024227470866*^9}},ExpressionUUID->"590fc815-9dac-4515-a3fa-\
252700b78eda"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resizing MeshRegions", "Section",
 CellChangeTimes->{{3.72996532845175*^9, 
  3.729965336923067*^9}},ExpressionUUID->"60a99f3f-6671-485c-a6e4-\
7bc3f9bb708d"],

Cell["\<\
When you are finalizing your Shapeways object, you will have a 3D rendering \
of your object that you created using coordinates with dimensions determined \
by mathematical units.  When you upload to Shapeways, your model will need to \
be scaled to be in either millimeters or in inches.  Furthermore, you may \
need to change this to adjust the cost of your model.  There is an easy way \
to change the size of a model when it is a MeshRegion object---use \
RegionResize.  If you only use one parameter as the second input, it will \
scale the object to have first coordinate equal to that input.  If you \
specify a list of parameters, it will scale the object to fit into the given \
box, not respecting the ratios between side lengths.\
\>", "Text",
 CellChangeTimes->{{3.729965339379046*^9, 3.729965467382937*^9}, {
  3.729965560027542*^9, 3.729965674453124*^9}, {3.730024277384794*^9, 
  3.730024310393196*^9}},ExpressionUUID->"413baca2-4b79-45a2-b397-\
0577f6919889"],

Cell[BoxData[
 RowBox[{"mesh", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<SnubCube.stl\>\""}],
      ",", 
     RowBox[{"PolyhedronData", "[", 
      RowBox[{"\"\<SnubCube\>\"", ",", "\"\<Polyhedron\>\""}], "]"}]}], "]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.729965503369131*^9, 
  3.7299655663218937`*^9}},ExpressionUUID->"56b78186-c56b-4a14-9b87-\
a74b5c27c0bc"],

Cell["\<\
Here we use RegionBounds to see that the standard size of this object is 2.29 \
units wide.  \
\>", "Text",
 CellChangeTimes->{{3.729965690822022*^9, 
  3.72996572194972*^9}},ExpressionUUID->"97a0b2a7-e9d0-4559-8216-\
d88a6c208721"],

Cell[BoxData[
 RowBox[{"RegionBounds", "[", "mesh", "]"}]], "Input",
 CellChangeTimes->{{3.729965681833754*^9, 
  3.72996568671019*^9}},ExpressionUUID->"9b0f629d-5bcb-48ca-ac3b-\
edbff8fd74d1"],

Cell["If we instead want it to be 2 units wide, we can do this:", "Text",
 CellChangeTimes->{{3.72996572502966*^9, 
  3.7299657347420063`*^9}},ExpressionUUID->"4644a67c-f07e-484f-8cd4-\
692d5040e9b3"],

Cell[BoxData[
 RowBox[{"newmesh", "=", 
  RowBox[{"RegionResize", "[", 
   RowBox[{"mesh", ",", " ", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7299656781875772`*^9, 3.7299656799020977`*^9}, {
  3.729965736631571*^9, 
  3.729965743054777*^9}},ExpressionUUID->"01f78263-66a9-4d16-bcc8-\
a70f8645805b"],

Cell[BoxData[
 RowBox[{"RegionBounds", "[", "newmesh", "]"}]], "Input",
 CellChangeTimes->{{3.7299657499759407`*^9, 
  3.729965750172079*^9}},ExpressionUUID->"f5ba89c8-b0c8-41c6-afa6-\
41bfdb5b1c3e"],

Cell["\<\
If we want to skew it differently in each direction, we can do this:\
\>", "Text",
 CellChangeTimes->{{3.7299657551675377`*^9, 3.72996578256761*^9}, {
  3.7300243352019663`*^9, 
  3.730024336017624*^9}},ExpressionUUID->"480e1074-e496-4094-ac7d-\
343306d0c535"],

Cell[BoxData[
 RowBox[{"skewmesh", "=", 
  RowBox[{"RegionResize", "[", 
   RowBox[{"mesh", ",", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.729965785359729*^9, 
  3.7299657980003357`*^9}},ExpressionUUID->"b3fc8461-da95-44a7-ae36-\
f1412066a269"],

Cell[BoxData[
 RowBox[{"RegionBounds", "[", "skewmesh", "]"}]], "Input",
 CellChangeTimes->{{3.72996580061695*^9, 
  3.729965800960147*^9}},ExpressionUUID->"126ae852-cb65-4982-b86b-\
f765099ab7c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comprehension Question", "Section",
 CellChangeTimes->{{3.730024351810151*^9, 
  3.7300243556824293`*^9}},ExpressionUUID->"9a1c9773-5a58-4331-a1d5-\
2767c1d3f12a"],

Cell["\<\
1. Use this technique to create an ellipsoid that has dimensions 2\
\[CloseCurlyDoubleQuote]x3\[CloseCurlyDoubleQuote]x4\[CloseCurlyDoubleQuote].\
\
\>", "Subsection",
 CellChangeTimes->{{3.730024358802477*^9, 
  3.730024397467371*^9}},ExpressionUUID->"3275e431-3e6a-4afd-a542-\
748f75983479"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DiscretizeGraphics", "Section",
 CellChangeTimes->{{3.729964290167141*^9, 
  3.7299642941979933`*^9}},ExpressionUUID->"27beeca4-0d37-40e0-b895-\
7fdbcbb0a610"],

Cell["\<\
In order to turn a 2D or 3D Graphics object into a MeshRegion object without \
exporting then importing, use DiscretizeGraphics.  Applying this function \
changes the object from its ideal mathematical representation into a shape \
built of points/lines/polygons/tetrahedra/simplices.\
\>", "Text",
 CellChangeTimes->{{3.729964301463335*^9, 3.7299643036222353`*^9}, {
  3.729964495524804*^9, 3.729964607574888*^9}, {3.730024406675933*^9, 
  3.730024457429085*^9}},ExpressionUUID->"5f64649c-57f6-423d-8bfe-\
4dca081ca0d5"],

Cell["\<\
Here is an example of changing an oval into an approximating polygon.\
\>", "Text",
 CellChangeTimes->{{3.7300244659253283`*^9, 
  3.73002448174997*^9}},ExpressionUUID->"c3bd0f45-240d-489f-8dd7-\
3b98a3ccddfa"],

Cell[BoxData[
 RowBox[{"oval", "=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"Disk", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "4"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727195298344934*^9, 3.727195305143598*^9}, {
  3.72996462109098*^9, 3.72996462181538*^9}, {3.730024810869253*^9, 
  3.7300248112435617`*^9}},ExpressionUUID->"1f983cbf-a21e-4e52-bbaa-\
e10882d42b85"],

Cell[BoxData[
 RowBox[{"ovalmesh", "=", 
  RowBox[{"DiscretizeGraphics", "[", "oval", "]"}]}]], "Input",
 CellChangeTimes->{{3.729964625373657*^9, 3.729964629343626*^9}, {
  3.7299646618117113`*^9, 3.729964676219475*^9}, {3.73002481317225*^9, 
  3.730024821035801*^9}},ExpressionUUID->"2e6326d2-0020-4379-9280-\
58a954713698"],

Cell["And here is how you can discretize a sphere:", "Text",
 CellChangeTimes->{{3.7300244939434643`*^9, 
  3.7300245018623247`*^9}},ExpressionUUID->"546dcc02-d1cb-4c17-981c-\
2f226ab1fadb"],

Cell[BoxData[
 RowBox[{"shape3d", "=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"Sphere", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", ".1"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7299646845623627`*^9, 
  3.729964702761629*^9}},ExpressionUUID->"380094fd-3159-4d76-b7f6-\
be67f290176c"],

Cell[BoxData[
 RowBox[{"ball", "=", 
  RowBox[{"DiscretizeGraphics", "[", "shape3d", "]"}]}]], "Input",
 CellChangeTimes->{{3.7271953122612534`*^9, 3.727195319479252*^9}, {
  3.72996471116*^9, 
  3.7299647298585176`*^9}},ExpressionUUID->"ad9d0c27-e2f7-4079-ad87-\
e47119ed67a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Region Operations", "Section",
 CellChangeTimes->{{3.72996594982905*^9, 
  3.729965960196106*^9}},ExpressionUUID->"6039475b-d44f-4dab-88d0-\
c8eaa789a9ca"],

Cell["\<\
RegionIntersection, RegionUnion, and RegionDifference are used to intersect, \
merge, or subtract two regions.  They work well in 2D, but RegionIntersection \
and RegionDifference do not work well in 3D.\
\>", "Text",
 CellChangeTimes->{{3.729965964676443*^9, 3.729965968820578*^9}, {
  3.730024558333989*^9, 3.730024609501254*^9}, {3.730024737307365*^9, 
  3.730024744593211*^9}, {3.730024788060898*^9, 
  3.73002479713111*^9}},ExpressionUUID->"15473675-e537-4227-b950-\
f476769b5d62"],

Cell[CellGroupData[{

Cell["2D Examples", "Subsection",
 CellChangeTimes->{{3.7300249987460537`*^9, 
  3.7300250012570066`*^9}},ExpressionUUID->"82404d38-934c-47e4-94d2-\
395514327363"],

Cell[BoxData[{
 RowBox[{"ovalmesh", "=", 
  RowBox[{"DiscretizeGraphics", "[", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "4"}], "}"}]}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"trianglemesh", "=", 
  RowBox[{"DiscretizeGraphics", "[", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Polygon", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", 
         RowBox[{"-", "7"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"squaremesh", "=", 
  RowBox[{"DiscretizeGraphics", "[", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Polygon", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7300248415955687`*^9, 
  3.730024943895877*^9}},ExpressionUUID->"e8aaad3b-7405-4e10-83b4-\
0e1f05a28351"],

Cell["The union of the oval and the triangle:", "Text",
 CellChangeTimes->{{3.73002501736967*^9, 
  3.730025026737917*^9}},ExpressionUUID->"4d470d19-f84c-4391-a286-\
4c1f28abc8f9"],

Cell[BoxData[
 RowBox[{"RegionUnion", "[", 
  RowBox[{"ovalmesh", ",", "trianglemesh"}], "]"}]], "Input",
 CellChangeTimes->{{3.730024969457596*^9, 
  3.730024969856407*^9}},ExpressionUUID->"a4a21e98-1255-4301-9327-\
0ceb3958362e"],

Cell["The intersection of the oval and the triangle:", "Text",
 CellChangeTimes->{{3.73002501736967*^9, 
  3.7300250357382812`*^9}},ExpressionUUID->"8a45eebf-0ad9-4b0c-8a40-\
5c94c550b14c"],

Cell[BoxData[
 RowBox[{"RegionIntersection", "[", 
  RowBox[{"ovalmesh", ",", "trianglemesh"}], "]"}]], "Input",
 CellChangeTimes->{{3.730024801400486*^9, 3.730024831991671*^9}, {
  3.73002488153601*^9, 3.730024882694603*^9}, {3.730024952923233*^9, 
  3.730024954235372*^9}},ExpressionUUID->"13bde365-faa6-41fb-9aee-\
21c131011417"],

Cell["The oval with the square removed:", "Text",
 CellChangeTimes->{{3.73002501736967*^9, 
  3.730025049666429*^9}},ExpressionUUID->"a835878d-fbd1-4421-b74b-\
77e362ba6739"],

Cell[BoxData[
 RowBox[{"RegionDifference", "[", 
  RowBox[{"ovalmesh", ",", "squaremesh"}], "]"}]], "Input",
 CellChangeTimes->{{3.730024966114531*^9, 
  3.7300249877698727`*^9}},ExpressionUUID->"eb743e08-815c-4754-aabc-\
25b4914e643b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D Examples", "Subsection",
 CellChangeTimes->{{3.730025008001293*^9, 
  3.73002500970525*^9}},ExpressionUUID->"bbcbdff3-6774-4dbf-a1ff-\
8bba40230c99"],

Cell[BoxData[{
 RowBox[{"ball", "=", 
  RowBox[{"DiscretizeGraphics", "[", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Sphere", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cube", "=", 
  RowBox[{"DiscretizeGraphics", "[", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Cuboid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"tetrahedron", "=", 
  RowBox[{"DiscretizeGraphics", "[", 
   RowBox[{"PolyhedronData", "[", 
    RowBox[{"\"\<Tetrahedron\>\"", ",", "\"\<Polyhedron\>\""}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7299659982550488`*^9, 3.72996603278268*^9}, {
  3.7299660685628643`*^9, 3.729966069104123*^9}, {3.73002461887154*^9, 
  3.730024691368246*^9}, {3.730024722120085*^9, 
  3.730024727081072*^9}},ExpressionUUID->"eb132385-15ec-4436-8bb0-\
6181b41f514c"],

Cell["\<\
Here you can see that you can make the union of two 3D meshes, but the \
intersection and the difference don\[CloseCurlyQuote]t  work\
\>", "Text",
 CellChangeTimes->{{3.7300250607147627`*^9, 
  3.7300250934440603`*^9}},ExpressionUUID->"3ddca569-b824-456e-904d-\
f7c5f57141d8"],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"RegionUnion", "[", 
    RowBox[{"ball", ",", "cube"}], "]"}], ",", 
   RowBox[{"RegionUnion", "[", 
    RowBox[{"tetrahedron", ",", "cube"}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"RegionIntersection", "[", 
  RowBox[{"ball", ",", "cube"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"RegionDifference", "[", 
  RowBox[{"ball", ",", "cube"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"RegionDifference", "[", 
  RowBox[{"ball", ",", "tetrahedron"}], "]"}]}], "Input",
 CellChangeTimes->{{3.729965972620309*^9, 3.729965974534185*^9}, {
  3.729966038792968*^9, 3.729966040647151*^9}, {3.7300246794303513`*^9, 
  3.730024711576476*^9}, {3.7300247514721203`*^9, 3.730024778397333*^9}, {
  3.7300250856211157`*^9, 
  3.730025096825286*^9}},ExpressionUUID->"e3858747-eaff-4641-a9c4-\
fe9378bcfe70"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comprehension Question", "Section",
 CellChangeTimes->{{3.730025119397636*^9, 
  3.730025122468657*^9}},ExpressionUUID->"bb08b245-c4b4-4c2b-9809-\
8dba1b2fcd64"],

Cell["\<\
2. The Cube and the Octahedron are two dual polyhedra.  Use PolyhedronData \
and DiscretizeGraphics to import both of them as meshes.  Then create the \
union of these two shapes so that you can see all 6 vertices of the \
octahedron poking through the faces of the cube, and all 8 vertices of the \
cube poking through the faces of the octahedron.  You may wish to use \
RegionResize to change the relative sizes of these shapes.\
\>", "Subsection",
 CellChangeTimes->{{3.730025125260871*^9, 
  3.730025280049746*^9}},ExpressionUUID->"5bfa1462-cf3d-4dea-918b-\
c296ca570ce5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Images", "Section",
 CellChangeTimes->{{3.727196699490467*^9, 
  3.72719670451475*^9}},ExpressionUUID->"69d63da4-2125-48ac-a800-\
7fe55bfd6ee4"],

Cell["You can also discretize images:", "Text",
 CellChangeTimes->{{3.7299652735143137`*^9, 
  3.729965280537303*^9}},ExpressionUUID->"fa4ee8f8-4516-450c-b5f1-\
99e2ef57a9df"],

Cell[CellGroupData[{

Cell["Drag and drop your image here.", "Subsection",
 CellChangeTimes->{{3.727196708050888*^9, 
  3.727196712678418*^9}},ExpressionUUID->"6ae239e1-d2d4-44bb-9a91-\
978f4db52822"],

Cell[BoxData[
 RowBox[{
  RowBox[{"flower", "=", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
EbjYxFe4aJnJ9Hojt3CrVq3srQqzSE5O1n3D2EwcdySp5P86dOjQk08+ic/g
Ok2V57+ig+2UfmU6PG1s3bp1sc5dp2VRvmWUtJUrVz548KDuO9DMnezkb376
6acd4j8JkQYNGoSv6uSvwlArUKvi4+NxxsFGNDwswOHAw5cvX970SlMYMnv2
bM2FUxvBc6ZFRUW98847undC5zkAzUJQP2rVqhUZ8qpmzZpy6UyvOnKOHT16
tGHDhho711LeiO0KULqCMah7kweaXm8KBMfy+fPnwSR0nbxCMYUZaXjKQejw
NWrUOH36NBUwHC4sCnGvXr26nbVgHmCU8QKaK6/4aiN885w5c/LkySOETsl7
h50PJS/du3cvj8ozseoUuhQTmJSUpLlwakMoaw3PLZkrVy7QG3lhzYKHJ8H1
U089ZWvpTQMKIhTNxEqjrz179mxycrKQBZQ8qLjpxrYqyDj4/FWrVuVzomNP
63A1ZCjh6ozdLZ9hqGPT7leEpzPt1asXZs40ETo3Ct+CqHedv8WQevXqUSJ9
PQxOY/jCzZs3ly5dmqoLBzvZg3Sf7rgCKMWnn36KZXTFaSluhPQrrN4rV66A
fi5k0pNTn7kFFGUoxypUqHDkyBFByJhVe0CbNm3cWEUyL774Iq7CmFJLtC2d
FmfHjBmDG8OFk8TdAt/KitsYSbG/evWq8w8VcjVCnDa8du3alTcNtw1dZCdy
XYuMDhgm8+bN4ycbYqlTU1MzWm+y1tG3b1/XDT0ZELmgi962sLcFKpkfEYgX
Fy9ebNWqFZ0AqHmbyUX9SvNNcsU9bA0bNqRTe6xJapQ54QHhwMaNGym9J8kr
d/Uogk6oAUWLNne8/PLLlK4k6E4lb1f8/PPPbS2raXz00UfCcAuilrhuhouz
69evL1q0KP0K9jE39i7+zDhD4euCBQt4kYPrV4rbIqRygq6FYXvc4Wnv5vfg
EBy2pMbDa8uWLUF1p/WvUFw0lNpuy5YtNhXUZECw0HJ8KDVz0wN+w48//kjZ
gXLmzIkXOJUIXke3QJoVDo2SJUuC9qj7ejWVimU6t7zwmxiI5fxD1QNDAvYe
D3StecqSkJDw119/6cEOSTmpXVpaGp547mrAWCPrOERJjsDIHT16tOZ1ngs+
dnjrunVA4fRVfP4RI0ZQeUOsMcVt4d0SKvzatWslSpTABnLdNi6ENp/K58Jz
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
YB/6ff9kfiqS/YSJWimY/oNJWizyFg9619iu
      "], {{0, 400}, {400, 0}}, {0, 255},
      
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->Automatic,
    ImageSizeRaw->{400, 400},
    PlotRange->{{0, 400}, {0, 400}}]}], ";"}]], "Input",
 CellChangeTimes->{{3.727195603556347*^9, 3.7271956073324614`*^9}, {
  3.727195690291873*^9, 
  3.727195694841576*^9}},ExpressionUUID->"facda77f-14bb-425d-8071-\
b1e89a0f205b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code to discretize.", "Subsection",
 CellChangeTimes->{{3.727196718131225*^9, 3.727196761884926*^9}, {
  3.727198573571368*^9, 
  3.7271985784010353`*^9}},ExpressionUUID->"951bb2a4-787d-4093-af1c-\
f09c132f26e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"image", "=", 
   RowBox[{"ImageMesh", "[", 
    RowBox[{"ColorNegate", "[", "flower", "]"}], "]"}]}], "\n"}]], "Input",
 CellChangeTimes->{{3.7271956186039553`*^9, 3.7271956245984898`*^9}, {
   3.7271956978999977`*^9, 3.727195701887875*^9}, 3.727198872337482*^9, {
   3.727198920904697*^9, 3.727198924976014*^9}, {3.727198959748966*^9, 
   3.727198960073126*^9}},ExpressionUUID->"3cdd10fb-4f37-43cb-aec2-\
830ab6d5d3dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Text", "Section",
 CellChangeTimes->{{3.727196766302062*^9, 
  3.727196766901334*^9}},ExpressionUUID->"e93cea89-e854-404d-a90e-\
f0a2a164221c"],

Cell["\<\
And also discretize words in whatever font your computer has installed.\
\>", "Text",
 CellChangeTimes->{{3.7299652862014523`*^9, 
  3.729965305017988*^9}},ExpressionUUID->"d540f125-db53-4701-b8f6-\
2946f8cd641e"],

Cell[BoxData[
 RowBox[{"word", "=", 
  RowBox[{"Text", "[", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<word\>\"", ",", "Bold", ",", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Bauhaus 93\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "50"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727198598419732*^9, 
  3.727198599178453*^9}},ExpressionUUID->"f2699d88-68ea-450a-8d23-\
c6c4f08aa31c"],

Cell[BoxData[
 RowBox[{"text", "=", 
  RowBox[{"DiscretizeGraphics", "[", 
   RowBox[{"word", ",", "_Text"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727198589412665*^9, 3.7271986027224627`*^9}, 
   3.7271986794891787`*^9},ExpressionUUID->"491bb3d6-f157-4760-bc04-\
641f69073c36"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: Creating a name plate", "Section",
 CellChangeTimes->{{3.727196774094616*^9, 3.727196778957912*^9}, {
  3.7299658142884293`*^9, 3.72996581813626*^9}, {3.730025315931711*^9, 
  3.730025316938581*^9}},ExpressionUUID->"dc32dd16-cb0c-4edd-af5a-\
6e5b6b0785aa"],

Cell["\<\
Here we create a plaque that has a raised image on it.  We first need to \
discretize the shape of the background:\
\>", "Text",
 CellChangeTimes->{{3.7300254053012257`*^9, 
  3.730025442310317*^9}},ExpressionUUID->"18569ec2-f9d1-4785-8109-\
136be450a23b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"shape", "=", 
   RowBox[{"DiscretizeGraphics", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.729965851130831*^9, 3.729965856954019*^9}, 
   3.730025446439596*^9},ExpressionUUID->"5331c805-7207-47a7-a6aa-\
07feacd720fc"],

Cell["And then we discretize the image.", "Text",
 CellChangeTimes->{{3.7300254503583927`*^9, 
  3.730025468046987*^9}},ExpressionUUID->"d49c9a3e-60d2-4062-9308-\
3117f88b8071"],

Cell[BoxData[
 RowBox[{
  RowBox[{"image", "=", 
   GraphicsBox[
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[CompressedData["
1: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
a0Pkk8T/Kz6VR0JHUHqah/8C+SG/Xg==
        "], {
         Line[{{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
          9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}, {14, 15}, {15, 
          16}, {16, 17}, {17, 18}, {18, 19}, {19, 20}, {20, 21}, {21, 22}, {
          22, 23}, {23, 24}, {24, 25}, {25, 26}, {26, 1}}]}, {
         Line[{{27, 28}, {28, 29}, {29, 30}, {30, 31}, {31, 32}, {32, 33}, {
          33, 34}, {34, 35}, {35, 36}, {36, 37}, {37, 38}, {38, 39}, {39, 
          40}, {40, 41}, {41, 42}, {42, 43}, {43, 44}, {44, 45}, {45, 46}, {
          46, 47}, {47, 48}, {48, 49}, {49, 50}, {50, 51}, {51, 27}}]}, {
         Line[{{52, 53}, {53, 54}, {54, 55}, {55, 56}, {56, 57}, {57, 58}, {
          58, 59}, {59, 60}, {60, 61}, {61, 62}, {62, 63}, {63, 64}, {64, 
          65}, {65, 66}, {66, 67}, {67, 68}, {68, 69}, {69, 70}, {70, 71}, {
          71, 72}, {72, 73}, {73, 74}, {74, 75}, {75, 76}, {76, 77}, {77, 
          78}, {78, 52}}]}, {
         Line[{{79, 80}, {80, 81}, {81, 82}, {82, 83}, {83, 84}, {84, 85}, {
          85, 86}, {86, 87}, {87, 88}, {88, 89}, {89, 90}, {90, 91}, {91, 
          92}, {92, 93}, {93, 94}, {94, 95}, {95, 96}, {96, 97}, {97, 98}, {
          98, 99}, {99, 100}, {100, 101}, {101, 102}, {102, 103}, {103, 
          104}, {104, 105}, {105, 106}, {106, 107}, {107, 108}, {108, 109}, {
          109, 110}, {110, 111}, {111, 79}}]}, {
         Line[{{112, 113}, {113, 114}, {114, 115}, {115, 116}, {116, 117}, {
          117, 118}, {118, 119}, {119, 120}, {120, 121}, {121, 122}, {122, 
          123}, {123, 124}, {124, 125}, {125, 126}, {126, 127}, {127, 128}, {
          128, 129}, {129, 130}, {130, 131}, {131, 132}, {132, 133}, {133, 
          134}, {134, 135}, {135, 136}, {136, 137}, {137, 138}, {138, 139}, {
          139, 140}, {140, 141}, {141, 112}}]}, {
         Line[{{142, 143}, {143, 144}, {144, 145}, {145, 146}, {146, 147}, {
          147, 148}, {148, 149}, {149, 150}, {150, 151}, {151, 152}, {152, 
          153}, {153, 154}, {154, 155}, {155, 156}, {156, 157}, {157, 158}, {
          158, 159}, {159, 160}, {160, 161}, {161, 162}, {162, 163}, {163, 
          164}, {164, 165}, {165, 166}, {166, 167}, {167, 168}, {168, 169}, {
          169, 142}}]}, {
         Line[{{170, 171}, {171, 172}, {172, 173}, {173, 174}, {174, 175}, {
          175, 176}, {176, 177}, {177, 178}, {178, 179}, {179, 180}, {180, 
          181}, {181, 182}, {182, 183}, {183, 184}, {184, 185}, {185, 186}, {
          186, 187}, {187, 188}, {188, 189}, {189, 190}, {190, 191}, {191, 
          192}, {192, 193}, {193, 194}, {194, 195}, {195, 196}, {196, 
          170}}]}, {
         Line[{{197, 198}, {198, 199}, {199, 200}, {200, 201}, {201, 202}, {
          202, 203}, {203, 204}, {204, 205}, {205, 206}, {206, 207}, {207, 
          208}, {208, 209}, {209, 210}, {210, 211}, {211, 212}, {212, 213}, {
          213, 214}, {214, 215}, {215, 216}, {216, 217}, {217, 218}, {218, 
          219}, {219, 220}, {220, 221}, {221, 222}, {222, 223}, {223, 
          197}}]}, {
         Line[{{224, 225}, {225, 226}, {226, 227}, {227, 228}, {228, 229}, {
          229, 230}, {230, 231}, {231, 232}, {232, 233}, {233, 234}, {234, 
          235}, {235, 236}, {236, 237}, {237, 238}, {238, 239}, {239, 240}, {
          240, 241}, {241, 242}, {242, 243}, {243, 244}, {244, 245}, {245, 
          246}, {246, 247}, {247, 248}, {248, 249}, {249, 250}, {250, 224}}]},
         Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7742749818667246000}]]}, 
      TagBox[GraphicsComplexBox[CompressedData["
1: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
a0Pkk8T/Kz6VR0JHUHqah/8C+SG/Xg==
        "], 
        {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
         TagBox[
          PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
            17, 18, 19, 20, 21, 22, 23, 24, 25, 26}, {27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51}, {52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}, {79, 80, 
            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
            97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
             111}, {112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 
            123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 
            136, 137, 138, 139, 140, 141}, {142, 143, 144, 145, 146, 147, 148,
             149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 
            162, 163, 164, 165, 166, 167, 168, 169}, {170, 171, 172, 173, 174,
             175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 
            188, 189, 190, 191, 192, 193, 194, 195, 196}, {197, 198, 199, 200,
             201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 
            214, 215, 216, 217, 218, 219, 220, 221, 222, 223}, {224, 225, 226,
             227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 
            240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "MeshGraphics",
     AutoDelete->True,
     Editable->False,
     Selectable->False],
    DefaultBaseStyle->{
     "MeshGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.729965851130831*^9, 3.729965856954019*^9}, 
   3.730025446439596*^9},ExpressionUUID->"04986e15-2da4-41bb-be1c-\
17cfa8a9400d"],

Cell["\<\
Here we resize the background shape and the image so that they fit inside one \
another.\[LineSeparator]We also make sure that these resized meshes are \
translated to have the same center.  (Use a TransformedRegion command \
involving a TranslationTransform)
They are showed together to make sure that the sizes and alignment are \
correct.\
\>", "Text",
 CellChangeTimes->{{3.730025470799078*^9, 
  3.730025599979227*^9}},ExpressionUUID->"70d1fc3d-f30c-46cf-a6c0-\
e3f494de3683"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resizedShape", "=", 
   RowBox[{"RegionResize", "[", 
    RowBox[{"shape", ",", "2.5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resizedImage", "=", 
   RowBox[{"RegionResize", "[", 
    RowBox[{"image", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"translatedShape", "=", 
   RowBox[{"TransformedRegion", "[", 
    RowBox[{"resizedShape", ",", 
     RowBox[{"TranslationTransform", "[", 
      RowBox[{"-", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", 
         RowBox[{"RegionBounds", "[", "resizedShape", "]"}]}], "]"}]}], 
      "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"translatedImage", "=", 
   RowBox[{"TransformedRegion", "[", 
    RowBox[{"resizedImage", ",", 
     RowBox[{"TranslationTransform", "[", 
      RowBox[{"-", 
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", 
         RowBox[{"RegionBounds", "[", "resizedImage", "]"}]}], "]"}]}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"translatedShape", ",", "translatedImage"}], "]"}]}], "Input",
 CellChangeTimes->{{3.727195911591464*^9, 3.727195932570794*^9}, {
   3.727196032048924*^9, 3.727196085088285*^9}, {3.727196783738845*^9, 
   3.7271968277676363`*^9}, {3.727198180947666*^9, 3.727198186680929*^9}, {
   3.727198684696484*^9, 3.72719871783917*^9}, 3.727198749401875*^9, {
   3.7271988367119513`*^9, 3.727198839976108*^9}, {3.7299658694696817`*^9, 
   3.729965888450952*^9}},ExpressionUUID->"495609eb-ddbb-4b25-81b5-\
872e70151964"],

Cell["\<\
Now we need to remove the image to create the flat layer that is the middle \
of the plate.\
\>", "Text",
 CellChangeTimes->{{3.730025605267002*^9, 
  3.7300256553326263`*^9}},ExpressionUUID->"cf637437-d665-45c7-b3b3-\
2c16149f79f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"background", "=", "translatedShape"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"foreground", "=", "translatedImage"}], ";"}], "\n", 
 RowBox[{"middle", "=", 
  RowBox[{"BoundaryDiscretizeRegion", "[", 
   RowBox[{"RegionDifference", "[", 
    RowBox[{"background", ",", "foreground"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.727195714980751*^9, 3.727195714983139*^9}, {
  3.727195745836773*^9, 3.727195878188096*^9}, {3.727195987950651*^9, 
  3.727196017365399*^9}, {3.727198249957205*^9, 
  3.727198302533842*^9}},ExpressionUUID->"dd0407f1-d334-4350-b043-\
fb9a35c2b3b6"],

Cell["\<\
The RegionBoundary command takes the boundary lines of the 2D shape:\
\>", "Text",
 CellChangeTimes->{{3.730025680486383*^9, 
  3.730025697126006*^9}},ExpressionUUID->"93e28843-ebfc-47bf-9c39-\
ac7788ff0cb4"],

Cell[BoxData[{
 RowBox[{"outerboundary", "=", 
  RowBox[{"RegionBoundary", "[", "background", "]"}]}], "\n", 
 RowBox[{"innerboundary", "=", 
  RowBox[{"RegionBoundary", "[", "foreground", "]"}]}]}], "Input",
 CellChangeTimes->{{3.727198286199346*^9, 3.727198289983759*^9}, {
  3.73002566733431*^9, 
  3.73002566788522*^9}},ExpressionUUID->"4e2f70d2-04c3-4299-81cc-\
113420e0bdf4"],

Cell["\<\
Last, we use the RegionProduct command to add three-dimensionality to the \
nameplate.\
\>", "Text",
 CellChangeTimes->{{3.730025703470789*^9, 
  3.730025724174823*^9}},ExpressionUUID->"8e08dbc9-db12-4d94-b840-\
671a9be929ae"],

Cell[BoxData[
 RowBox[{"nameplate", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RegionProduct", "[", 
      RowBox[{"background", ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"{", "0.", "}"}], "}"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RegionProduct", "[", 
      RowBox[{"outerboundary", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0.", "}"}], ",", 
          RowBox[{"{", ".1", "}"}]}], "}"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RegionProduct", "[", 
      RowBox[{"middle", ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"{", ".1", "}"}], "}"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RegionProduct", "[", 
      RowBox[{"innerboundary", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", ".1", "}"}], ",", 
          RowBox[{"{", ".2", "}"}]}], "}"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RegionProduct", "[", 
      RowBox[{"foreground", ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"{", ".2", "}"}], "}"}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727198294933736*^9, 3.727198364200982*^9}, 
   3.727198426747458*^9, 
   3.727198740609823*^9},ExpressionUUID->"2d6dcaa7-29bd-4974-9c27-\
0baa4f26d727"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<nameplate.stl\>\""}], 
   ",", "nameplate"}], "]"}]], "Input",
 CellChangeTimes->{{3.72719848818143*^9, 3.7271984881836348`*^9}, 
   3.727198730137027*^9},ExpressionUUID->"bdf2d55a-21f4-49e9-b571-\
db318ae42bd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comprehension Question", "Section",
 CellChangeTimes->{{3.7300253361231422`*^9, 
  3.730025341500218*^9}},ExpressionUUID->"e6067b08-41b8-4456-894a-\
042e5e2f044c"],

Cell["\<\
3. Create a name plate with your name on it.  Change the background shape to \
be a different shape than a rectangle.\
\>", "Subsection",
 CellChangeTimes->{{3.730025348979542*^9, 
  3.730025390220749*^9}},ExpressionUUID->"68105027-1a34-416c-93be-\
6fca7c44ef00"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Challenge Question", "Section",
 CellChangeTimes->{{3.730025737223053*^9, 
  3.730025739983374*^9}},ExpressionUUID->"0716efd4-5be7-4f92-a683-\
835eff429b64"],

Cell["\<\
4. Use a Table Command and TransformedRegion/TranslationTransform to create \
an army of hundreds of octahedra and cubes.\
\>", "Subsection",
 CellChangeTimes->{{3.730025745103394*^9, 
  3.730025799873095*^9}},ExpressionUUID->"80b25fa3-abb8-4338-91af-\
5c8ab3f5a460"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accessing Parts of a MeshRegion Object", "Section",
 CellChangeTimes->{{3.729964319070662*^9, 
  3.7299643288710127`*^9}},ExpressionUUID->"0223c7fc-ab3f-42f8-b34f-\
47362df38200"],

Cell["\<\
Use MeshCoordinates and MeshPrimitives to get information out of a MeshRegion \
Object.  MeshCoordinates will extract the coordinates of the mesh\
\>", "Text",
 CellChangeTimes->{{3.729964334007098*^9, 3.7299643345430717`*^9}, {
  3.729964377248446*^9, 3.729964405065138*^9}, {3.7299644822593203`*^9, 
  3.729964486779421*^9}, {3.729964744429111*^9, 3.729964754042841*^9}, {
  3.729964859568091*^9, 
  3.72996486103795*^9}},ExpressionUUID->"df86f171-3f22-4974-b5fa-\
db424db5c0e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coords", "=", 
   RowBox[{"MeshCoordinates", "[", "ball", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.729964838950457*^9, 
  3.7299648434054213`*^9}},ExpressionUUID->"2bc59902-6139-4b86-a739-\
382c220e8a9c"],

Cell[BoxData[
 RowBox[{"first10", "=", 
  RowBox[{"Take", "[", 
   RowBox[{"coords", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.729964732459403*^9, 3.729964737914693*^9}, {
  3.729964809838725*^9, 
  3.729964846941674*^9}},ExpressionUUID->"f82cf09c-58a1-44b2-80ec-\
398235ca5134"],

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Point", ",", "coords"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.729964827094523*^9, 
  3.729964853701672*^9}},ExpressionUUID->"21a0933f-90fe-46c6-aa0e-\
b3c8c7e032a6"],

Cell["\<\
Use MeshPrimitives will extract other parts of the object, like its edges or \
polygonal faces.\
\>", "Text",
 CellChangeTimes->{{3.729964334007098*^9, 3.7299643345430717`*^9}, {
  3.729964377248446*^9, 3.729964405065138*^9}, {3.7299644822593203`*^9, 
  3.729964486779421*^9}, {3.729964744429111*^9, 3.729964754042841*^9}, {
  3.729964859568091*^9, 
  3.7299649047430058`*^9}},ExpressionUUID->"477ed5c7-5b55-48c3-a363-\
5158d110878f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"MeshPrimitives", "[", 
    RowBox[{"ball", ",", "1"}], "]"}]}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"edges", " ", "have", " ", "dimension", " ", "1"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.729964838950457*^9, 3.7299648434054213`*^9}, {
  3.729964905983478*^9, 
  3.729964924464086*^9}},ExpressionUUID->"3c2b9d7e-dfa9-4a15-b099-\
43c7201245da"],

Cell[BoxData[
 RowBox[{"first10", "=", 
  RowBox[{"Take", "[", 
   RowBox[{"edges", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.729964732459403*^9, 3.729964737914693*^9}, {
  3.729964809838725*^9, 3.729964846941674*^9}, {3.729964930361392*^9, 
  3.729964931040098*^9}},ExpressionUUID->"f8f78a21-40c4-4dd2-8b55-\
6fd9da449f83"],

Cell[BoxData[
 RowBox[{"Graphics3D", "[", "edges", "]"}]], "Input",
 CellChangeTimes->{{3.729964827094523*^9, 3.729964853701672*^9}, {
  3.729964937691107*^9, 
  3.7299649384531803`*^9}},ExpressionUUID->"e1d9404c-45c4-44fd-926b-\
eb8210e73d64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"faces", "=", 
   RowBox[{"MeshPrimitives", "[", 
    RowBox[{"ball", ",", "2"}], "]"}]}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"faces", " ", "have", " ", "dimension", " ", "2"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.729964838950457*^9, 3.7299648434054213`*^9}, {
  3.729964905983478*^9, 
  3.729964960208797*^9}},ExpressionUUID->"f007d823-6240-4e7b-b240-\
fe98e11249b3"],

Cell[BoxData[
 RowBox[{"first10", "=", 
  RowBox[{"Take", "[", 
   RowBox[{"faces", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.729964732459403*^9, 3.729964737914693*^9}, {
  3.729964809838725*^9, 3.729964846941674*^9}, {3.729964930361392*^9, 
  3.729964931040098*^9}, {3.729964961993164*^9, 
  3.729964962504781*^9}},ExpressionUUID->"6a32cb31-7336-438d-8fcf-\
fee0faf98e3d"],

Cell[BoxData[
 RowBox[{"Graphics3D", "[", "faces", "]"}]], "Input",
 CellChangeTimes->{{3.729964827094523*^9, 3.729964853701672*^9}, {
  3.729964937691107*^9, 3.7299649384531803`*^9}, {3.729964969155484*^9, 
  3.729964969696992*^9}},ExpressionUUID->"e6e107b0-721d-4922-bed2-\
7317a8d8fe94"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comprehension Question", "Section",
 CellChangeTimes->{{3.7299649908105*^9, 
  3.729964994625599*^9}},ExpressionUUID->"3d080db2-241c-4752-8517-\
0688bb6fb7ed"],

Cell[CellGroupData[{

Cell["\<\
Extract the edges of one of the models you exported from the last tutorial.  \
Then use the Map function to create a wireframe of the object like this for \
the sphere:\
\>", "Subsection",
 CellChangeTimes->{{3.729964996336577*^9, 
  3.729965077571817*^9}},ExpressionUUID->"e2cfbacf-9e2f-4579-bcc8-\
449698917c9b"],

Cell[BoxData[
 RowBox[{"Graphics3D", "@", 
  RowBox[{"Map", "[", 
   RowBox[{"Tube", ",", 
    RowBox[{"edges", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.729965084227119*^9, 
  3.729965101486136*^9}},ExpressionUUID->"59a8fd5c-0177-42fc-a2e5-\
58c92dbf5d43"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example:  Costa Rica Pendant", "Section",
 CellChangeTimes->{{3.634999439891822*^9, 3.634999463155789*^9}, {
  3.635473403574562*^9, 
  3.6354734072775583`*^9}},ExpressionUUID->"c7450133-8940-4f28-b6ee-\
a621751ab62d"],

Cell["\<\
This is an example in which the geography of Costa Rica is transformed into a \
polygon, and then given some thickness by adding in rectangles along the \
boundary to connect two polygonal sheets distance 0.25 apart.\
\>", "Text",
 CellChangeTimes->{{3.63561551130991*^9, 
  3.635615594814905*^9}},ExpressionUUID->"67515f2f-ff8a-4f80-95a7-\
8c1a83771e62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CREdges", "=", 
   RowBox[{
    RowBox[{"CountryData", "[", 
     RowBox[{
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<Country\>\"", ",", "\"\<CostaRica\>\""}], "]"}], ",", 
      "\"\<Polygon\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.634999468190605*^9, 
  3.634999532943488*^9}},ExpressionUUID->"f8a4aab5-3794-4dcb-80d8-\
9fe43923ebf2"],

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Polygon", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", "0"}], "]"}], "&"}], ",", "CREdges"}], "]"}], 
     "]"}], ",", 
    RowBox[{"Polygon", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", "0.25"}], "]"}], "&"}], ",", "CREdges"}], "]"}], 
     "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6349995610261583`*^9, 
  3.634999565322735*^9}},ExpressionUUID->"1df35979-05df-4b87-ad61-\
a37583f36b69"],

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"{", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Polygon", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"CREdges", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"CREdges", "[", 
           RowBox[{"[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"Length", "[", "CREdges", "]"}], ",", "1"}], "]"}], 
            "]"}], "]"}], ",", "0"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"CREdges", "[", 
           RowBox[{"[", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"Length", "[", "CREdges", "]"}], ",", "1"}], "]"}], 
            "]"}], "]"}], ",", "0.25"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"CREdges", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "0.25"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "CREdges", "]"}]}], "}"}]}], "]"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6349995998120537`*^9, 
  3.634999645253538*^9}},ExpressionUUID->"033a02c9-27af-49b3-aad9-\
216bfd7db042"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other 3D modeling commands: BSplineSurface", "Section",
 CellChangeTimes->{{3.634926398699404*^9, 3.634926402459477*^9}, {
  3.7300258213137703`*^9, 
  3.730025827977655*^9}},ExpressionUUID->"b59d3eaa-402e-4c08-b122-\
e821e32d217f"],

Cell[TextData[{
 "If you have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "i"], ",", 
     SubscriptBox["y", "i"], ",", 
     SubscriptBox["z", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "ecf06484-eb10-4cf6-9e4e-947e0062bc97"],
 ") control points and you\[CloseCurlyQuote]d like a surface that is a smooth \
function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{"f", "(", 
     RowBox[{"x", ",", "y"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "5bb1784e-4375-46f7-9872-6d402f12fbf1"],
 ", then use ",
 StyleBox["BSplineSurface", "Input",
  FontSize->16]
}], "Text",
 CellChangeTimes->{{3.635473269101218*^9, 
  3.6354733628021097`*^9}},ExpressionUUID->"46c07265-08fb-43f6-aa3f-\
b799e461aa2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cpts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "5"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellID->611029795,ExpressionUUID->"0bdb629f-c160-4bfe-aed4-06c1d49b2281"],

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"BSplineSurface", "[", "cpts", "]"}], "]"}]}]], "Input",
 CellID->640778481,ExpressionUUID->"c7e7d98c-8c12-448f-ab29-eaa411e6cf1d"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Medium", "]"}], ",", "Red", ",", 
      RowBox[{"Map", "[", 
       RowBox[{"Point", ",", "cpts"}], "]"}], ",", "Gray", ",", 
      RowBox[{"Line", "[", "cpts", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"Transpose", "[", "cpts", "]"}], "]"}]}], "}"}], "]"}], ",", 
   "b"}], "]"}]], "Input",
 CellID->385455702,ExpressionUUID->"80c6753c-6680-41f8-9bfa-e80c89e8dc94"],

Cell["\<\
This is from the Wolfram Demonstration: \[OpenCurlyDoubleQuote]Designing a \
Car Body with Splines\[CloseCurlyDoubleQuote] available here:
http://demonstrations.wolfram.com/DesigningACarBodyWithSplines/\
\>", "Text",
 CellChangeTimes->{{3.6356153170481167`*^9, 3.635615318711269*^9}, {
  3.635615376829094*^9, 
  3.635615428984309*^9}},ExpressionUUID->"ceaf4489-0ae4-4af5-ae38-\
8f9c487e8046"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"color", ",", 
       RowBox[{"Specularity", "[", 
        RowBox[{"White", ",", "50"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"BSplineSurface", "[", 
        RowBox[{"carbody", ",", 
         RowBox[{"SplineDegree", "\[Rule]", 
          RowBox[{"Floor", "[", "degrees", "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"mesh", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Blue", ",", 
           RowBox[{"Line", "[", "carbody", "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"Transpose", "[", "carbody", "]"}], "]"}], ",", "Red", 
           ",", 
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
           RowBox[{"Point", "/@", "carbody"}]}], "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
     RowBox[{"RotationAction", "\[Rule]", "\"\<Clip\>\""}], ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"degrees", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"14", ",", "7"}], "}"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"140", ",", "70"}], "}"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"Floor", "[", "degrees", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"Spacer", "[", "10", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{"color", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<HTML\>\"", ",", "\"\<GoldenRod\>\""}], "]"}]}], "}"}],
         "]"}], ",", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{"mesh", ",", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Spacer", "[", "10", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{"carbody", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".2"}], ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".2"}], ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".2"}], ",", 
            RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".2"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".2"}], ",", "2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".2"}], ",", "2.25", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".2"}], ",", "2.25", ",", "0"}], "}"}]}], "}"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "2"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2.25", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "2.25", ",", "0"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2.25", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2.25", ",", "0"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1.01", ",", 
            RowBox[{"-", "2.25"}], ",", "1.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.01", ",", 
            RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.01", ",", 
            RowBox[{"-", "2"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.01", ",", "0", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.01", ",", "2", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.01", ",", "2.25", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.01", ",", "2.25", ",", "1.5"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.99", ",", 
            RowBox[{"-", "2.25"}], ",", "1.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.99", ",", 
            RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.99", ",", 
            RowBox[{"-", "2"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.99", ",", "0", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.99", ",", "2", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.99", ",", "2.25", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.99", ",", "2.25", ",", "1.5"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", 
            RowBox[{"-", "2"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "0", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "2.25", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "2.25", ",", "0"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", 
            RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", 
            RowBox[{"-", "2"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "0", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "2.25", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "2.25", ",", "0"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "2"}], ",", "3.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "0", ",", "3.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "2", ",", "3.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "2.25", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "2.25", ",", "0"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"8", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8", ",", 
            RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8", ",", 
            RowBox[{"-", "2"}], ",", "3.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8", ",", "0", ",", "3.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8", ",", "2", ",", "3.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8", ",", "2.25", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8", ",", "2.25", ",", "0"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"8.01", ",", 
            RowBox[{"-", "2.25"}], ",", "1.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8.01", ",", 
            RowBox[{"-", "2.25"}], ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8.01", ",", 
            RowBox[{"-", "2"}], ",", "3.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8.01", ",", "0", ",", "3.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8.01", ",", "2", ",", "3.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8.01", ",", "2.25", ",", "1.75"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"8.01", ",", "2.25", ",", "1.5"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"9", ",", 
            RowBox[{"-", "2.25"}], ",", "1.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9", ",", 
            RowBox[{"-", "2.25"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9", ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9", ",", "2.25", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9", ",", "2.25", ",", "1.5"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"9.99", ",", 
            RowBox[{"-", "2.25"}], ",", "1.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9.99", ",", 
            RowBox[{"-", "2.25"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9.99", ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9.99", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9.99", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9.99", ",", "2.25", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"9.99", ",", "2.25", ",", "1.5"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "2.25"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "2.25", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "2.25", ",", "0"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"11", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", 
            RowBox[{"-", "2.25"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", "2", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", "2.25", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", "2.25", ",", "0"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"11.01", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11.01", ",", 
            RowBox[{"-", "2.25"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11.01", ",", 
            RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11.01", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11.01", ",", "2", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11.01", ",", "2.25", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11.01", ",", "2.25", ",", "0"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "}"}]}], ")"}]}]}], "]"}]], "Input",ExpressionUU\
ID->"961287cf-4d30-4e85-8391-dc397af51768"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example: ParametricPlot3D for a pendant", "Section",
 CellChangeTimes->{{3.730026455409388*^9, 
  3.730026471196972*^9}},ExpressionUUID->"7497e6b4-46c3-4ff0-a0af-\
950ab29b8572"],

Cell["\<\
Here is the code I used to create my Polaris Pendant, which is made up of \
parabolas.  You can see that I first created a 2D version of the design, so \
that I could determine the correct functions that I wanted to include.\
\>", "Text",
 CellChangeTimes->{{3.7300264752452307`*^9, 
  3.730026586736505*^9}},ExpressionUUID->"915638cc-2f97-4078-a57d-\
d7b2a19cd537"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1.25", ",", "1.25"}], "}"}], ",", ".75"}], "]"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", "1.25"}], ")"}], "^", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"1.5", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"t", "-", "1.25"}], ")"}], "^", "2"}]}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0.7201166105600068`", ",", "1.7798833894399924`"}],
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"1.15", "-", 
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"t", "-", "1.25"}], ")"}], "^", "2"}]}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"1.35", "+", 
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"t", "-", "1.25"}], ")"}], "^", "2"}]}]}]}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0.5753270351715947`", ",", "1.924672964828405`"}], 
        "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"u", "-", "1.25"}], ")"}], "^", "2"}]}], ",", "u"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.5", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"u", "-", "1.25"}], ")"}], "^", "2"}]}], ",", "u"}], 
          "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0.7201166105600068`", ",", "1.7798833894399924`"}],
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.15", "-", 
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"u", "-", "1.25"}], ")"}], "^", "2"}]}]}], ",", "u"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.35", "+", 
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"u", "-", "1.25"}], ")"}], "^", "2"}]}]}], ",", "u"}], 
          "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0.5753270351715947`", ",", "1.924672964828405`"}], 
        "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{".48", ",", "2.02"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{".48", ",", "2.02"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7093218918649116`*^9, 3.709321901191698*^9}, {
  3.7093219394373665`*^9, 3.7093219402295103`*^9}, {3.7093219905573025`*^9, 
  3.709322032878773*^9}, {3.7093483186568117`*^9, 3.7093483929172554`*^9}, {
  3.730026488415731*^9, 
  3.7300264895666637`*^9}},ExpressionUUID->"9cd9dcae-98b5-4e14-8120-\
288322e58ac6"],

Cell["\<\
Then I converted each of the 2D ParametricPlot functions to 3D \
ParametricPlot3D functions.\
\>", "Text",
 CellChangeTimes->{{3.730026594160774*^9, 
  3.730026619601346*^9}},ExpressionUUID->"d44b2d5c-eb81-45fa-a177-\
28e56b0a7a9c"],

Cell[BoxData[
 RowBox[{"pendant", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{".75", 
            RowBox[{"Cos", "[", "t", "]"}]}], "+", "1.25"}], ",", 
          RowBox[{
           RowBox[{".75", 
            RowBox[{"Sin", "[", "t", "]"}]}], "+", "1.25"}], ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"2", "Pi"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Tube", "[", 
          RowBox[{".04", ",", 
           RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"t", "-", "1.25"}], ")"}], "^", "2"}]}], ",", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"1.5", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"t", "-", "1.25"}], ")"}], "^", "2"}]}], ",", "0"}], 
           "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "t", ",", "0.7201166105600068`", ",", "1.7798833894399924`"}], "}"}],
         ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Tube", "[", 
          RowBox[{".03", ",", 
           RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"1.15", "-", 
             RowBox[{
              RowBox[{"1", "/", "2"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t", "-", "1.25"}], ")"}], "^", "2"}]}]}], ",", "0"}],
            "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"1.35", "+", 
             RowBox[{
              RowBox[{"1", "/", "2"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t", "-", "1.25"}], ")"}], "^", "2"}]}]}], ",", "0"}],
            "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0.5753270351715947`", ",", "1.924672964828405`"}],
          "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Tube", "[", 
          RowBox[{".03", ",", 
           RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"u", "-", "1.25"}], ")"}], "^", "2"}]}], ",", "u", ",",
             "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1.5", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"u", "-", "1.25"}], ")"}], "^", "2"}]}], ",", "u", ",",
             "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "u", ",", "0.7201166105600068`", ",", "1.7798833894399924`"}], "}"}],
         ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Tube", "[", 
          RowBox[{".03", ",", 
           RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1.15", "-", 
             RowBox[{
              RowBox[{"1", "/", "2"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"u", "-", "1.25"}], ")"}], "^", "2"}]}]}], ",", "u", 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1.35", "+", 
             RowBox[{
              RowBox[{"1", "/", "2"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"u", "-", "1.25"}], ")"}], "^", "2"}]}]}], ",", "u", 
            ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0.5753270351715947`", ",", "1.924672964828405`"}],
          "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Tube", "[", 
          RowBox[{".03", ",", 
           RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{".48", ",", "2.02"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{".48", ",", "2.02"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", ".2"}], ",", ".2"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.709348420490562*^9, 3.709348627012555*^9}, {
  3.709348678872429*^9, 3.709348680348319*^9}, {3.709349012241632*^9, 
  3.7093490132542963`*^9}},ExpressionUUID->"9b4042f5-325b-4e13-85c9-\
1606227654cf"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1387, 1005},
WindowMargins->{{3, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 856, 12, 98, "Title",ExpressionUUID->"eee3dd45-dee9-44dc-8db6-67e7e98bb992"],
Cell[1426, 36, 701, 14, 53, "Subsubtitle",ExpressionUUID->"3341d4df-b403-4f97-9159-991107237301"],
Cell[CellGroupData[{
Cell[2152, 54, 203, 4, 67, "Section",ExpressionUUID->"cdb3715e-8a33-4493-bd7d-b8fc1f345485"],
Cell[2358, 60, 1275, 19, 58, "Text",ExpressionUUID->"8b01631c-299a-46a1-83b1-f58254ff18b3"],
Cell[3636, 81, 181, 4, 30, "Input",ExpressionUUID->"76c1a888-82eb-4d7a-86cc-d8b780c6b930"],
Cell[3820, 87, 547, 15, 37, "Text",ExpressionUUID->"590fc815-9dac-4515-a3fa-252700b78eda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4404, 107, 164, 3, 67, "Section",ExpressionUUID->"60a99f3f-6671-485c-a6e4-7bc3f9bb708d"],
Cell[4571, 112, 985, 15, 104, "Text",ExpressionUUID->"413baca2-4b79-45a2-b397-0577f6919889"],
Cell[5559, 129, 474, 13, 30, "Input",ExpressionUUID->"56b78186-c56b-4a14-9b87-a74b5c27c0bc"],
Cell[6036, 144, 242, 6, 35, "Text",ExpressionUUID->"97a0b2a7-e9d0-4559-8216-d88a6c208721"],
Cell[6281, 152, 193, 4, 30, "Input",ExpressionUUID->"9b0f629d-5bcb-48ca-ac3b-edbff8fd74d1"],
Cell[6477, 158, 200, 3, 35, "Text",ExpressionUUID->"4644a67c-f07e-484f-8cd4-692d5040e9b3"],
Cell[6680, 163, 305, 7, 30, "Input",ExpressionUUID->"01f78263-66a9-4d16-bcc8-a70f8645805b"],
Cell[6988, 172, 199, 4, 30, "Input",ExpressionUUID->"f5ba89c8-b0c8-41c6-afa6-41bfdb5b1c3e"],
Cell[7190, 178, 270, 6, 35, "Text",ExpressionUUID->"480e1074-e496-4094-ac7d-343306d0c535"],
Cell[7463, 186, 317, 8, 30, "Input",ExpressionUUID->"b3fc8461-da95-44a7-ae36-f1412066a269"],
Cell[7783, 196, 197, 4, 30, "Input",ExpressionUUID->"126ae852-cb65-4982-b86b-f765099ab7c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8017, 205, 169, 3, 67, "Section",ExpressionUUID->"9a1c9773-5a58-4331-a1d5-2767c1d3f12a"],
Cell[8189, 210, 303, 7, 54, "Subsection",ExpressionUUID->"3275e431-3e6a-4afd-a542-748f75983479"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8529, 222, 165, 3, 67, "Section",ExpressionUUID->"27beeca4-0d37-40e0-b895-7fdbcbb0a610"],
Cell[8697, 227, 531, 9, 58, "Text",ExpressionUUID->"5f64649c-57f6-423d-8bfe-4dca081ca0d5"],
Cell[9231, 238, 220, 5, 35, "Text",ExpressionUUID->"c3bd0f45-240d-489f-8dd7-3b98a3ccddfa"],
Cell[9454, 245, 471, 12, 30, "Input",ExpressionUUID->"1f983cbf-a21e-4e52-bbaa-e10882d42b85"],
Cell[9928, 259, 326, 6, 30, "Input",ExpressionUUID->"2e6326d2-0020-4379-9280-58a954713698"],
Cell[10257, 267, 190, 3, 35, "Text",ExpressionUUID->"546dcc02-d1cb-4c17-981c-2f226ab1fadb"],
Cell[10450, 272, 347, 10, 30, "Input",ExpressionUUID->"380094fd-3159-4d76-b7f6-be67f290176c"],
Cell[10800, 284, 278, 6, 30, "Input",ExpressionUUID->"ad9d0c27-e2f7-4079-ad87-e47119ed67a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11115, 295, 161, 3, 67, "Section",ExpressionUUID->"6039475b-d44f-4dab-88d0-c8eaa789a9ca"],
Cell[11279, 300, 496, 9, 35, "Text",ExpressionUUID->"15473675-e537-4227-b950-f476769b5d62"],
Cell[CellGroupData[{
Cell[11800, 313, 163, 3, 54, "Subsection",ExpressionUUID->"82404d38-934c-47e4-94d2-395514327363"],
Cell[11966, 318, 1412, 44, 73, "Input",ExpressionUUID->"e8aaad3b-7405-4e10-83b4-0e1f05a28351"],
Cell[13381, 364, 180, 3, 35, "Text",ExpressionUUID->"4d470d19-f84c-4391-a286-4c1f28abc8f9"],
Cell[13564, 369, 231, 5, 30, "Input",ExpressionUUID->"a4a21e98-1255-4301-9327-0ceb3958362e"],
Cell[13798, 376, 189, 3, 35, "Text",ExpressionUUID->"8a45eebf-0ad9-4b0c-8a40-5c94c550b14c"],
Cell[13990, 381, 332, 6, 30, "Input",ExpressionUUID->"13bde365-faa6-41fb-9aee-21c131011417"],
Cell[14325, 389, 174, 3, 35, "Text",ExpressionUUID->"a835878d-fbd1-4421-b74b-77e362ba6739"],
Cell[14502, 394, 236, 5, 30, "Input",ExpressionUUID->"eb743e08-815c-4754-aabc-25b4914e643b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14775, 404, 158, 3, 54, "Subsection",ExpressionUUID->"bbcbdff3-6774-4dbf-a1ff-8bba40230c99"],
Cell[14936, 409, 1081, 28, 73, "Input",ExpressionUUID->"eb132385-15ec-4436-8bb0-6181b41f514c"],
Cell[16020, 439, 287, 6, 35, "Text",ExpressionUUID->"3ddca569-b824-456e-904d-f7c5f57141d8"],
Cell[16310, 447, 855, 19, 94, "Input",ExpressionUUID->"e3858747-eaff-4641-a9c4-fe9378bcfe70"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17214, 472, 167, 3, 67, "Section",ExpressionUUID->"bb08b245-c4b4-4c2b-9809-8dba1b2fcd64"],
Cell[17384, 477, 586, 10, 108, "Subsection",ExpressionUUID->"5bfa1462-cf3d-4dea-918b-c296ca570ce5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18007, 492, 150, 3, 67, "Section",ExpressionUUID->"69d63da4-2125-48ac-a800-7fe55bfd6ee4"],
Cell[18160, 497, 175, 3, 35, "Text",ExpressionUUID->"fa4ee8f8-4516-450c-b5f1-99e2ef57a9df"],
Cell[CellGroupData[{
Cell[18360, 504, 178, 3, 54, "Subsection",ExpressionUUID->"6ae239e1-d2d4-44bb-9a91-978f4db52822"],
Cell[18541, 509, 40118, 665, 105, "Input",ExpressionUUID->"facda77f-14bb-425d-8071-b1e89a0f205b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58696, 1179, 218, 4, 54, "Subsection",ExpressionUUID->"951bb2a4-787d-4093-af1c-f09c132f26e8"],
Cell[58917, 1185, 455, 9, 52, "Input",ExpressionUUID->"3cdd10fb-4f37-43cb-aec2-830ab6d5d3dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59421, 1200, 149, 3, 67, "Section",ExpressionUUID->"e93cea89-e854-404d-a90e-f0a2a164221c"],
Cell[59573, 1205, 223, 5, 35, "Text",ExpressionUUID->"d540f125-db53-4701-b8f6-2946f8cd641e"],
Cell[59799, 1212, 399, 9, 30, "Input",ExpressionUUID->"f2699d88-68ea-450a-8d23-c6c4f08aa31c"],
Cell[60201, 1223, 281, 6, 30, "Input",ExpressionUUID->"491bb3d6-f157-4760-bc04-641f69073c36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60519, 1234, 271, 4, 67, "Section",ExpressionUUID->"dc32dd16-cb0c-4edd-af5a-6e5b6b0785aa"],
Cell[60793, 1240, 266, 6, 35, "Text",ExpressionUUID->"18569ec2-f9d1-4785-8109-136be450a23b"],
Cell[61062, 1248, 486, 14, 30, "Input",ExpressionUUID->"5331c805-7207-47a7-a6aa-07feacd720fc"],
Cell[61551, 1264, 177, 3, 35, "Text",ExpressionUUID->"d49c9a3e-60d2-4062-9308-3117f88b8071"],
Cell[61731, 1269, 14938, 243, 105, "Input",ExpressionUUID->"04986e15-2da4-41bb-be1c-17cfa8a9400d"],
Cell[76672, 1514, 491, 10, 81, "Text",ExpressionUUID->"70d1fc3d-f30c-46cf-a6c0-e3f494de3683"],
Cell[77166, 1526, 1569, 37, 115, "Input",ExpressionUUID->"495609eb-ddbb-4b25-81b5-872e70151964"],
Cell[78738, 1565, 243, 6, 35, "Text",ExpressionUUID->"cf637437-d665-45c7-b3b3-2c16149f79f2"],
Cell[78984, 1573, 612, 13, 73, "Input",ExpressionUUID->"dd0407f1-d334-4350-b043-fb9a35c2b3b6"],
Cell[79599, 1588, 218, 5, 35, "Text",ExpressionUUID->"93e28843-ebfc-47bf-9c39-ac7788ff0cb4"],
Cell[79820, 1595, 381, 8, 52, "Input",ExpressionUUID->"4e2f70d2-04c3-4299-81cc-113420e0bdf4"],
Cell[80204, 1605, 236, 6, 35, "Text",ExpressionUUID->"8e08dbc9-db12-4d94-b840-671a9be929ae"],
Cell[80443, 1613, 1515, 42, 157, "Input",ExpressionUUID->"2d6dcaa7-29bd-4974-9c27-0baa4f26d727"],
Cell[81961, 1657, 330, 8, 30, "Input",ExpressionUUID->"bdf2d55a-21f4-49e9-b571-db318ae42bd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82328, 1670, 169, 3, 67, "Section",ExpressionUUID->"e6067b08-41b8-4456-894a-042e5e2f044c"],
Cell[82500, 1675, 273, 6, 54, "Subsection",ExpressionUUID->"68105027-1a34-416c-93be-6fca7c44ef00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82810, 1686, 163, 3, 67, "Section",ExpressionUUID->"0716efd4-5be7-4f92-a683-835eff429b64"],
Cell[82976, 1691, 277, 6, 54, "Subsection",ExpressionUUID->"80b25fa3-abb8-4338-91af-5c8ab3f5a460"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83290, 1702, 185, 3, 67, "Section",ExpressionUUID->"0223c7fc-ab3f-42f8-b34f-47362df38200"],
Cell[83478, 1707, 491, 9, 35, "Text",ExpressionUUID->"df86f171-3f22-4974-b5fa-db424db5c0e2"],
Cell[83972, 1718, 246, 6, 30, "Input",ExpressionUUID->"2bc59902-6139-4b86-a739-382c220e8a9c"],
Cell[84221, 1726, 291, 7, 30, "Input",ExpressionUUID->"f82cf09c-58a1-44b2-80ec-398235ca5134"],
Cell[84515, 1735, 252, 6, 30, "Input",ExpressionUUID->"21a0933f-90fe-46c6-aa0e-b3c8c7e032a6"],
Cell[84770, 1743, 444, 9, 35, "Text",ExpressionUUID->"477ed5c7-5b55-48c3-a363-5158d110878f"],
Cell[85217, 1754, 427, 11, 30, "Input",ExpressionUUID->"3c2b9d7e-dfa9-4a15-b099-43c7201245da"],
Cell[85647, 1767, 336, 7, 30, "Input",ExpressionUUID->"f8f78a21-40c4-4dd2-8b55-6fd9da449f83"],
Cell[85986, 1776, 244, 5, 30, "Input",ExpressionUUID->"e1d9404c-45c4-44fd-926b-eb8210e73d64"],
Cell[86233, 1783, 427, 11, 30, "Input",ExpressionUUID->"f007d823-6240-4e7b-b240-fe98e11249b3"],
Cell[86663, 1796, 385, 8, 30, "Input",ExpressionUUID->"6a32cb31-7336-438d-8fcf-fee0faf98e3d"],
Cell[87051, 1806, 290, 5, 30, "Input",ExpressionUUID->"e6e107b0-721d-4922-bed2-7317a8d8fe94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87378, 1816, 165, 3, 67, "Section",ExpressionUUID->"3d080db2-241c-4752-8517-0688bb6fb7ed"],
Cell[CellGroupData[{
Cell[87568, 1823, 324, 7, 81, "Subsection",ExpressionUUID->"e2cfbacf-9e2f-4579-bcc8-449698917c9b"],
Cell[87895, 1832, 330, 9, 30, "Input",ExpressionUUID->"59a8fd5c-0177-42fc-a2e5-58c92dbf5d43"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88274, 1847, 224, 4, 67, "Section",ExpressionUUID->"c7450133-8940-4f28-b6ee-a621751ab62d"],
Cell[88501, 1853, 365, 7, 58, "Text",ExpressionUUID->"67515f2f-ff8a-4f80-95a7-8c1a83771e62"],
Cell[88869, 1862, 471, 13, 30, "Input",ExpressionUUID->"f8a4aab5-3794-4dcb-80d8-9fe43923ebf2"],
Cell[89343, 1877, 643, 20, 30, "Input",ExpressionUUID->"1df35979-05df-4b87-ad61-a37583f36b69"],
Cell[89989, 1899, 1540, 42, 115, "Input",ExpressionUUID->"033a02c9-27af-49b3-aad9-216bfd7db042"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91566, 1946, 238, 4, 67, "Section",ExpressionUUID->"b59d3eaa-402e-4c08-b122-e821e32d217f"],
Cell[91807, 1952, 758, 24, 36, "Text",ExpressionUUID->"46c07265-08fb-43f6-aa3f-b799e461aa2c"],
Cell[92568, 1978, 509, 15, 30, "Input",ExpressionUUID->"0bdb629f-c160-4bfe-aed4-06c1d49b2281",
 CellID->611029795],
Cell[93080, 1995, 206, 4, 30, "Input",ExpressionUUID->"c7e7d98c-8c12-448f-ab29-eaa411e6cf1d",
 CellID->640778481],
Cell[93289, 2001, 524, 13, 30, "Input",ExpressionUUID->"80c6753c-6680-41f8-9bfa-e80c89e8dc94",
 CellID->385455702],
Cell[93816, 2016, 403, 8, 58, "Text",ExpressionUUID->"ceaf4489-0ae4-4af5-ae38-8f9c487e8046"],
Cell[94222, 2026, 14847, 386, 556, "Input",ExpressionUUID->"961287cf-4d30-4e85-8391-dc397af51768"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109106, 2417, 184, 3, 67, "Section",ExpressionUUID->"7497e6b4-46c3-4ff0-a0af-950ab29b8572"],
Cell[109293, 2422, 376, 7, 58, "Text",ExpressionUUID->"915638cc-2f97-4078-a57d-d7b2a19cd537"],
Cell[109672, 2431, 3882, 114, 136, "Input",ExpressionUUID->"9cd9dcae-98b5-4e14-8120-288322e58ac6"],
Cell[113557, 2547, 242, 6, 35, "Text",ExpressionUUID->"d44b2d5c-eb81-45fa-a177-28e56b0a7a9c"],
Cell[113802, 2555, 5324, 153, 199, "Input",ExpressionUUID->"9b4042f5-325b-4e13-85c9-1606227654cf"]
}, Open  ]]
}, Open  ]]
}
]
*)

